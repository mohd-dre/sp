{"ast":null,"code":"import React from 'react';\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = React.useState({\n    width: undefined,\n    height: undefined\n  });\n  React.useEffect(() => {\n    // only execute all the code below in client side\n    // Handler to call on window resize\n    const handleResize = () => {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    // return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n};\nexport default useWindowSize;","map":{"version":3,"names":["React","useWindowSize","windowSize","setWindowSize","useState","width","undefined","height","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener"],"sources":["/Users/mohd/Documents/GitHub/sp/hooks/useWindowSize.js"],"sourcesContent":["import React from 'react';\n\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = React.useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  React.useEffect(() => {\n    // only execute all the code below in client side\n    // Handler to call on window resize\n    const handleResize = () => {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    // return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n};\n\nexport default useWindowSize;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGH,KAAK,CAACI,QAAQ,CAAC;IACjDC,KAAK,EAAEC,SAAS;IAChBC,MAAM,EAAED;EACV,CAAC,CAAC;EAEFN,KAAK,CAACQ,SAAS,CAAC,MAAM;IACpB;IACA;IACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB;MACAN,aAAa,CAAC;QACZE,KAAK,EAAEK,MAAM,CAACC,UAAU;QACxBJ,MAAM,EAAEG,MAAM,CAACE;MACjB,CAAC,CAAC;IACJ,CAAC;;IAED;IACAF,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;;IAE/C;IACAA,YAAY,CAAC,CAAC;;IAEd;IACA;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACR,OAAOP,UAAU;AACnB,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module"}